class TFIDF(document_processing):
    
    def __init__(self,dataset):
        super().__init__(dataset)
        super().readDataset()
        self.vectorizer = None
        self.vocab=None
        self.feature_names=None
        self.df_list=[]
        self.tfidf_vector=None
        self.vectorizing_data()
        
    def vectorizing_data(self):
        
        self.vectorizer = TfidfVectorizer(ngram_range=(2, 2))
        self.tfidf_vector = self.vectorizer.fit_transform(self.corpus)
        vectorizer2 = TfidfVectorizer(min_df=0.001)
        Y=vectorizer2.fit_transform(self.corpus)
        self.vocab=vectorizer2.get_feature_names()
        self.feature_names=self.vectorizer.get_feature_names()
    def display_tfidf(self):
        for i in range(5):
            first_document_vector=self.tfidf_vector[i]
            df = pd.DataFrame(first_document_vector.T.todense(), index=self.feature_names, columns=["tfidf"]) 
            df.sort_values(by=["tfidf"],ascending=False)
            df = df[(df.T != 0).any()]
            self.df_list.append(df)
        for i in self.df_list:


            display(i)
