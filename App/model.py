import joblib
import pickle
from datetime import datetime
import sys, os
start=datetime.now()

def resource_path(relative_path):
    """ Get the absolute path to the resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)

class LoadModel:

    def __init__(self):
        """Loading the variables saved from our model"""
        
    
        self.malware_vectorizer = pickle.load(open(resource_path('Variables_assets/malware_vectorizer.sav'), 'rb'))
        self.goodware_vectorizer = pickle.load(open(resource_path('Variables_assets/goodware_vectorizer.sav'), 'rb'))
        self.malware_vector=pickle.load(open(resource_path('Variables_assets/malware_vector.sav'), 'rb'))
        self.goodware_vector=pickle.load(open(resource_path('Variables_assets/goodware_vector.sav'), 'rb'))
        self.w2v_goodware=pickle.load(open(resource_path('Variables_assets/goodware_word2vec.sav'), 'rb'))
        self.w2v_malware=pickle.load(open(resource_path('Variables_assets/malware_word2vec.sav'), 'rb'))
        self.model = pickle.load(open(resource_path('Variables_assets/finalized_model.sav'), 'rb'))
        self.malware_max = pickle.load(open(resource_path('Variables_assets/malware_max_vectorizer.sav'), 'rb'))
        self.goodware_max = pickle.load(open(resource_path('Variables_assets/goodware_max_vectorizer.sav'), 'rb'))
        self.malware_ant=pickle.load(open(resource_path('Variables_assets/malware_ant.sav'), 'rb'))
        self.goodware_ant=pickle.load(open(resource_path('Variables_assets/goodware_ant.sav'), 'rb'))
        self.onegram_malware_vectorizer=pickle.load(open(resource_path('Variables_assets/1gram_malware_vectorizer.sav'), 'rb'))
        self.onegram_goodware_vectorizer=pickle.load(open(resource_path('Variables_assets/1gram_goodware_vectorizer.sav'), 'rb'))
        self.twogram_malware_vectorizer=pickle.load(open(resource_path('Variables_assets/2gram_malware_vectorizer.sav'), 'rb'))
        self.twogram_goodware_vectorizer=pickle.load(open(resource_path('Variables_assets/2gram_goodware_vectorizer.sav'), 'rb'))
        self.sc=pickle.load(open(resource_path('Variables_assets/StandardScaler.sav'), 'rb'))
        self.history_list=pickle.load(open(resource_path('Variables_assets/history.sav'), 'rb'))
        
        
        
        
   
model_instance=LoadModel()        

print(datetime.now()-start)
